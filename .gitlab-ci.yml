image: amazoncorretto:17

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.1"
  ANDROID_SDK_TOOLS:   "9477386"
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"

stages:
  - build
  - test
  - package

.setup_common: &setup_common
  before_script:
    # Install / configure Android SDK
    - yum install -y wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$ANDROID_HOME/platform-tools
    - echo y | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "platforms;android-${ANDROID_COMPILE_SDK}" > /dev/null
    - echo y | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "build-tools;${ANDROID_BUILD_TOOLS}" > /dev/null
    - set +o pipefail
    - yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
    - set -o pipefail
    # Write Artifactory details
    - echo $ARTIFACTORY_USER >> gradle.properties
    - echo $ARTIFACTORY_PASSWORD >> gradle.properties
    - echo $ARTIFACTORY_URL >> gradle.properties

# BUILD
build_debug:
  <<: *setup_common
  stage: build
  except:
    - main
  script:
    - ./gradlew assembleDebug -PcachePush=true
  artifacts:
    paths:
      - app/build/outputs/apk/debug/app-debug.apk

build_release:
  <<: *setup_common
  stage: build
  only:
    - main
  script:
    - ./gradlew assembleRelease -PcachePush=true
  artifacts:
    paths:
      - app/build/outputs/apk/release/app-release-unsigned.apk

# TEST
unit_test_debug:
  <<: *setup_common
  stage: test
  except:
    - main
  script:
    - ./gradlew testDebugUnitTest

unit_test_release:
  <<: *setup_common
  stage: test
  only:
    - main
  script:
    - ./gradlew testReleaseUnitTest

# PACKAGE
.package_template: &package_template
  before_script:
    - export VERSION_NAME=`egrep '^[[:blank:]]+versionName[[:blank:]]'  app/build.gradle.kts | awk '{print $3}' | sed s/\"//g`
    - export VERSION_CODE=`egrep '^[[:blank:]]+versionCode[[:blank:]]'  app/build.gradle.kts | awk '{print $3}'`
    - mkdir -p deliverables

    # Log build info
    - touch ./deliverables/info.txt
    - echo "Build date          $(date)"                >> ./deliverables/info.txt
    - echo "App version name    ${VERSION_NAME}"        >> ./deliverables/info.txt
    - echo "App version code    ${VERSION_CODE}"        >> ./deliverables/info.txt
    - echo "Git branch          ${CI_COMMIT_REF_NAME}"  >> ./deliverables/info.txt
    - echo "Git commit          ${CI_COMMIT_SHA}"       >> ./deliverables/info.txt
    - echo "Gitlab pipeline     ${CI_PIPELINE_ID}"      >> ./deliverables/info.txt

package_nightly:
  <<: *package_template
  stage: package
  environment: Development
  only:
    - develop
  script:
    - mv app/build/outputs/apk/debug/app-debug.apk ./deliverables/Cadenas-v$VERSION_NAME-$VERSION_CODE-debug.apk
  artifacts:
    expire_in: 3 days
    paths:
      - deliverables

package_release:
  <<: *package_template
  stage: package
  environment: Release
  only:
    - main
  script:
    -mv app/build/outputs/apk/release/app-release.apk ./deliverables/Cadenas-v$VERSION_NAME-$VERSION_CODE-release.apk
  artifacts:
    expire_in: 4 weeks
    paths:
      - deliverables